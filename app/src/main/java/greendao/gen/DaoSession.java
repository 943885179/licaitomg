package greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import chen.com.myaccount.bean.Flag;
import chen.com.myaccount.bean.Inaccount;
import chen.com.myaccount.bean.Outaccount;
import chen.com.myaccount.bean.Users;

import greendao.gen.FlagDao;
import greendao.gen.InaccountDao;
import greendao.gen.OutaccountDao;
import greendao.gen.UsersDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig flagDaoConfig;
    private final DaoConfig inaccountDaoConfig;
    private final DaoConfig outaccountDaoConfig;
    private final DaoConfig usersDaoConfig;

    private final FlagDao flagDao;
    private final InaccountDao inaccountDao;
    private final OutaccountDao outaccountDao;
    private final UsersDao usersDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        flagDaoConfig = daoConfigMap.get(FlagDao.class).clone();
        flagDaoConfig.initIdentityScope(type);

        inaccountDaoConfig = daoConfigMap.get(InaccountDao.class).clone();
        inaccountDaoConfig.initIdentityScope(type);

        outaccountDaoConfig = daoConfigMap.get(OutaccountDao.class).clone();
        outaccountDaoConfig.initIdentityScope(type);

        usersDaoConfig = daoConfigMap.get(UsersDao.class).clone();
        usersDaoConfig.initIdentityScope(type);

        flagDao = new FlagDao(flagDaoConfig, this);
        inaccountDao = new InaccountDao(inaccountDaoConfig, this);
        outaccountDao = new OutaccountDao(outaccountDaoConfig, this);
        usersDao = new UsersDao(usersDaoConfig, this);

        registerDao(Flag.class, flagDao);
        registerDao(Inaccount.class, inaccountDao);
        registerDao(Outaccount.class, outaccountDao);
        registerDao(Users.class, usersDao);
    }
    
    public void clear() {
        flagDaoConfig.getIdentityScope().clear();
        inaccountDaoConfig.getIdentityScope().clear();
        outaccountDaoConfig.getIdentityScope().clear();
        usersDaoConfig.getIdentityScope().clear();
    }

    public FlagDao getFlagDao() {
        return flagDao;
    }

    public InaccountDao getInaccountDao() {
        return inaccountDao;
    }

    public OutaccountDao getOutaccountDao() {
        return outaccountDao;
    }

    public UsersDao getUsersDao() {
        return usersDao;
    }

}
